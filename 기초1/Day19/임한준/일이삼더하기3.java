package 기초1.Day19.임한준;

import java.util.Scanner;

public class 일이삼더하기3 {

    /**
     * 15988번
     * 정수 4를 1, 2, 3의 합으로 나타내는 방법은 총 7가지가 있다. 합을 나타낼 때는 수를 1개 이상 사용해야 한다.
     * 1+1+1+1 , 1+1+2, 1+2+1, 2+1+1, 2+2, 1+3, 3+1
     * 정수 n이 주어졌을 때, n을 1, 2, 3의 합으로 나타내는 방법의 수를 구하는 프로그램을 작성하시오.

     * 입력
     * 첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있고, 정수 n이 주어진다. n은 양수이며 1,000,000보다 작거나 같다.

     * 출력
     * 각 테스트 케이스마다, n을 1, 2, 3의 합으로 나타내는 방법의 수를 1,000,000,009로 나눈 나머지를 출력한다.
     */

//    n이 주어 졌을 때 3이라면 7 ? 111 12 21 3
//    dp[n] = dp[n-1],dp[n-2],dp[n-3] = dp[4] 점화식 ( 규칙에 뒤

    static long[] dp = new long[1000001];
    // int 범위인 20억이 넘어 30억 가능으로 long (타입 확인)

    public static void main(String[] args) {

        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        // 1, 2, 3 의 경우 포함 초기화
        dp[1] = 1;
        dp[2] = 2;
        dp[3] = 4;

        for (int i = 4; i <= 1000000; i++) {
            dp[i] = (dp[i - 1] + dp[i - 2] + dp[i - 3]) % 1000000009;
            // 리턴 식에 % 1000000009 해버리면 오버플로우 발생할 수 있기에 모듈러 분배연산 활용
        }

        for (int i = 0; i < n; i++) {
            int k = sc.nextInt();
            System.out.println(dp[k]);

        }
    }
}

